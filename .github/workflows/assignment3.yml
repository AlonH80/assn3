name: CI_flow
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: log date
        run: date -Iminutes > /tmp/log.txt

      - name: log submitters
        run: echo "Alon Hartanu" >> /tmp/log.txt

      - uses: actions/checkout@v3

      - name: create ninja key file
        run: echo ${{ secrets.NINJA_API_KEY }} > ninja_api_key

      - uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: meals_and_dishes:latest
          outputs: type=docker,dest=/tmp/meals_and_dishes.tar

      - name:  log failed build
        if: failure()
        run: echo "image not able to be built" >> /tmp/log.txt

      - name: log successful build
        run: echo "image successfully built" >> /tmp/log.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: from_build
          path: /tmp/meals_and_dishes.tar

      - name: Upload log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: outputs
          path: /tmp/log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - uses: actions/download-artifact@v3

      - name: load docker image
        run: docker load --input from_build/meals_and_dishes.tar

      - name: run docker image # Let image start-up while installing with pip
        run: docker run --rm -d -p 8000:8000 --name meals_and_dishes meals_and_dishes:latest

      - name: install tests requirements
        run: pip install -r tests/requirements_tests.txt

      - name: log container up
        run: |
          docker ps
          echo "Container up and running" >> outputs/log.txt

      - name: run tests
        run: python -m pytest -v tests/assn3_tests.py 1>assn3_test_results.txt 2>&1

      - name: stop container
        if: always()
        run: docker stop meals_and_dishes

      - name: log test succeed
        run: echo "tests succeeded" >> outputs/log.txt

      - name: log test failed
        if: failure()
        run: echo "tests failed" >> outputs/log.txt

      - name: Upload test log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: outputs
          path: assn3_test_results.txt

      - name: Upload log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: outputs
          path: outputs/log.txt

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - uses: actions/download-artifact@v3

      - name: load docker image
        run: docker load --input from_build/meals_and_dishes.tar

      - name: run docker image # Let image start-up while installing with pip
        run: docker run --rm -d -p 8000:8000 --name meals_and_dishes meals_and_dishes:latest

      - name: install tests requirements
        run: pip install -r tests/requirements_tests.txt

      - name: run queries
        run: python tests/query_job.py

      - name: stop container
        if: always()
        run: docker stop meals_and_dishes

      - name: Upload query log
        uses: actions/upload-artifact@v3
        with:
          name: outputs
          path: response.txt

      - name: Upload log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: outputs
          path: outputs/log.txt


